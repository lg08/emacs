/* implements a bunch of string functions */
/* Lucas Gen */


#include <stdio.h>
#include <stdlib.h>
#include <stddef.h>
#include <assert.h>
#include <string.h>
#include "str.h"




/* returns the length of the string */
size_t Str_getLength(const char pcSrc[])
{
  size_t uLength = 0;
  assert(pcSrc != NULL);
  while (pcSrc[uLength] != '\0')
    uLength++;
  return uLength;
}


/* copies one string into another */
char * Str_copy(char str1[], const char str2[])
{
  size_t index = 0;
  char current_char;
  assert(str1 != NULL);
  assert(str2 != NULL);

  while (str2[index] != '\0')
    {
      current_char = str2[index];
      str1[index] = current_char;
      index++;
    }
  str1[index] = '\0';

  return &str1[0];
}


/* concatenates one string onto the end of another */
char * Str_concat(char str1[], const char str2[])
{
  size_t index;
  char current_char;
  size_t str1_length;
  
  assert(str1 != NULL);
  assert(str2 != NULL);

  str1_length = Str_getLength(str1);
  index = 0;

  while (str2[index] != '\0')
    {
      current_char = str2[index];
      str1[str1_length + index] = current_char;
      index++;
    }
    str1[str1_length + index] = '\0';

    /* pointer = &str1 */
    return &str1[0];
}

/* this function compares two different strings */
int Str_compare(const char str1[], const char str2[])
{
  char char1;
  char char2;
  int i;

  assert(str1 != NULL);
  assert(str2 != NULL);

  i = 0;
  
  while (str1[i] != '\0' && str2[i] != '\0')
    {
      char1 = str1[i];
      char2 = str2[i];

      if (char1 < char2)
        {
          return -1;
        }
      else if (char1 > char2)
        {
          return 1;
        }
      else
        {
          i++;
        }
    }

  if (str1[i] == '\0' && str2[i] == '\0')
    {
      return 0;
    }
  else if (str1[i] == '\0')
    {
      return -1;
    }
  else
    {
      return 1;
    }
  
  
}


/* searches a string for another string */
char * Str_search(const char str1[], const char str2[])
{
  int index = 0;
  int counter = 0;
  int length_of_str2;
  char *pointer;

  assert(str1 != NULL);
  assert(str2 != NULL);

  length_of_str2 = Str_getLength(str2);
  
  
  while (str1[index] != '\0')
    {
          counter = 0;
          while (str1[index + counter] == str2[counter] && str1[index+counter] != '\0')
            {
              if (counter == (length_of_str2 - 1))
                {
                  pointer = &str1[index];
                  return pointer;
                }
              counter = counter + 1;
            }
      index = index + 1;
    }
  pointer = 0;
  return pointer;
}



/* this is the main function, it's called when the program is run */
int main (void)
{
  const char acHaystack[] = "";
  const char acNeedle[] = "";

  printf("established result is: %d", strstr(acHaystack, acNeedle));
  
  /* char stringer[] = {'h', 'e', 'l', 'l', 'o'}; */
  /* char finished_string[20] = {'b', 'a', 'b', 'y'}; */
  /* char copy_string[9]; */
  /* int i; */


  /* /\* length ---------------------------------------------- *\/ */
  /* printf("the established length is: %d\n", strlen(stringer)); */
  /* printf("the length is: %d\n",Str_getLength(stringer)); */


  /* /\* copy -------------------------------------------------- *\/ */
  /* printf("my copy result: %d\n", Str_copy(copy_string, stringer)); */
  /* printf("the copied string is: "); */
  /* i = 0; */
  /* while (copy_string[i] != '\0') */
  /*   { */
  /*     putchar(finished_string[i]); */
  /*     i++; */
  /*   } */
  /* printf("\n"); */

  /* printf("established copy result %d\n", strcpy(copy_string, stringer)); */
  /* printf("established copy string is: "); */
  /* i = 0; */
  /* while (copy_string[i] != '\0') */
  /*   { */
  /*     putchar(finished_string[i]); */
  /*     i++; */
  /*   } */
  /* printf("\n"); */

  /* /\* concat ----------------------------------------------- *\/ */
  /* printf("my concat function returns: %d\n", Str_concat(finished_string, stringer)); */
  /* printf("the established concat function returns: %d\n", strcat(finished_string, stringer)); */
  
  /* printf("my concat string is: "); */
  /*   i = 0; */
  /* while (finished_string[i] != '\0') */
  /*   { */
  /*     putchar(finished_string[i]); */
  /*     i++; */
  /*   } */
  /* printf("\n"); */
  /* printf("the established concat string is: "); */
  /* i = 0; */
  /* while (finished_string[i] != '\0') */
  /*   { */
  /*     putchar(finished_string[i]); */
  /*     i++; */
  /*   } */
  /* printf("\n"); */


  /* /\* compare -------------------------------------------- *\/ */
  /* printf("my compare resutls: %d\n", Str_compare("hello","hell")); */
  /* printf("established compare resutls: %d\n", strcmp("hello", "hell")); */

  /* /\* string search *\/ */
  /* printf("the string string is: %d\n", strstr("abchellaskdjfhhell", "hello")); */
  /* printf("my string string is: %d\n", Str_search("abchellaskdjfhhell", "hello")); */

  return 0;
}
