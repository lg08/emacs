=====================================================================
PROBLEM 1 - NUMBER SYSTEMS SYNTHESIS - 12 points / 80 total on exam
=====================================================================

In each part of this question, you may express numbers algebraically
as a power of 2 using ** to indicate exponentiation. For example:
2**(i-1) is "two to the i-minus-1 power", and
2**31 - 1 is "two to the 31st power minus 1".

a. In the two ranges below, replace the "____" with the inclusive
   upper and lower bounds of decimal numbers that do not change value
   when moving from i-bit two's complement to (i+1)-bit two's
   complement (for example, when moving from four bits to represent
   integers to using five bits to do so). The two ranges consider
   two different possibilities for changing an i-bit value into
   an (i+1)-bit value:

   If we make the change by prepending a 0 onto the front of the i-bit
   representation (for example, 1001 -> 01001):

____ <= x <= ____

   If we make the change by prepending a 1 onto the front of the i-bit
   representation (for example, 1001 -> 11001):

____ <= x <= ____


b. In the range below, replace the "____" with the inclusive upper and
   lower bounds of armlab C int literals for which the expression still
   compiles and does not change value when adding a 0 before the first
   character of the literal (for example, 217 -> 0217):

____ <= x <= ____

   Hint 1: does a literal 09 compile?
   Hint 2: remember that the first character of a signed int literal
           is not necessarily a digit.

